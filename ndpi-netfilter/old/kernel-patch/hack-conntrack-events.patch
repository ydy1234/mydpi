diff --git a/include/net/netfilter/nf_conntrack_ecache.h b/include/net/netfilter/nf_conntrack_ecache.h
--- a/include/net/netfilter/nf_conntrack_ecache.h
+++ b/include/net/netfilter/nf_conntrack_ecache.h
@@ -79,7 +79,8 @@ nf_conntrack_event_cache(enum ip_conntra
 	struct net *net = nf_ct_net(ct);
 	struct nf_conntrack_ecache *e;
 
-	if (!rcu_access_pointer(net->ct.nf_conntrack_event_cb))
+	if (!rcu_access_pointer(net->ct.nf_conntrack_event_cb)
+		&& !rcu_access_pointer(net->ct.nf_conntrack_event_cb_2))
 		return;
 
 	e = nf_ct_ecache_find(ct);
@@ -98,11 +99,14 @@ nf_conntrack_eventmask_report(unsigned i
 	int ret = 0;
 	struct net *net = nf_ct_net(ct);
 	struct nf_ct_event_notifier *notify;
+	struct nf_ct_event_notifier *notify_2;
 	struct nf_conntrack_ecache *e;
 
 	rcu_read_lock();
+	/* Incredibly nasty duplication in order to hack second event */
 	notify = rcu_dereference(net->ct.nf_conntrack_event_cb);
-	if (notify == NULL)
+	notify_2 = rcu_dereference(net->ct.nf_conntrack_event_cb_2);
+	if ((notify == NULL) && (notify_2 == NULL))
 		goto out_unlock;
 
 	e = nf_ct_ecache_find(ct);
@@ -121,7 +125,8 @@ nf_conntrack_eventmask_report(unsigned i
 		if (!((eventmask | missed) & e->ctmask))
 			goto out_unlock;
 
-		ret = notify->fcn(eventmask | missed, &item);
+		ret = min( notify ? notify->fcn(eventmask | missed, &item) : 0,
+				notify_2 ? notify_2->fcn(eventmask | missed, &item) : 0 );
 		if (unlikely(ret < 0 || missed)) {
 			spin_lock_bh(&ct->lock);
 			if (ret < 0) {
diff --git a/include/net/netns/conntrack.h b/include/net/netns/conntrack.h
--- a/include/net/netns/conntrack.h
+++ b/include/net/netns/conntrack.h
@@ -73,6 +73,7 @@ struct netns_ct {
 	struct hlist_nulls_head	dying;
 	struct ip_conntrack_stat __percpu *stat;
 	struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb;
+	struct nf_ct_event_notifier __rcu *nf_conntrack_event_cb_2;
 	struct nf_exp_event_notifier __rcu *nf_expect_event_cb;
 	int			sysctl_events;
 	unsigned int		sysctl_events_retry_timeout;
diff --git a/net/netfilter/nf_conntrack_ecache.c b/net/netfilter/nf_conntrack_ecache.c
--- a/net/netfilter/nf_conntrack_ecache.c
+++ b/net/netfilter/nf_conntrack_ecache.c
@@ -33,14 +33,17 @@ void nf_ct_deliver_cached_events(struct
 {
 	struct net *net = nf_ct_net(ct);
 	unsigned long events, missed;
+	/* Incredibly nasty duplication in order to hack second event */
 	struct nf_ct_event_notifier *notify;
+	struct nf_ct_event_notifier *notify_2;
 	struct nf_conntrack_ecache *e;
 	struct nf_ct_event item;
 	int ret;
 
 	rcu_read_lock();
 	notify = rcu_dereference(net->ct.nf_conntrack_event_cb);
-	if (notify == NULL)
+	notify_2 = rcu_dereference(net->ct.nf_conntrack_event_cb_2);
+	if ( (notify == NULL) && (notify_2 == NULL) )
 		goto out_unlock;
 
 	e = nf_ct_ecache_find(ct);
@@ -64,7 +67,8 @@ void nf_ct_deliver_cached_events(struct
 	item.pid = 0;
 	item.report = 0;
 
-	ret = notify->fcn(events | missed, &item);
+	ret = min( notify ? notify->fcn(events | missed, &item) : 0,
+			 notify_2 ? notify_2->fcn(events | missed, &item) : 0);
 
 	if (likely(ret >= 0 && !missed))
 		goto out_unlock;
@@ -86,15 +90,21 @@ int nf_conntrack_register_notifier(struc
 {
 	int ret;
 	struct nf_ct_event_notifier *notify;
+	struct nf_ct_event_notifier *notify_2;
 
 	mutex_lock(&nf_ct_ecache_mutex);
 	notify = rcu_dereference_protected(net->ct.nf_conntrack_event_cb,
 					   lockdep_is_held(&nf_ct_ecache_mutex));
-	if (notify != NULL) {
+	notify_2 = rcu_dereference_protected(net->ct.nf_conntrack_event_cb_2,
+					     lockdep_is_held(&nf_ct_ecache_mutex));
+	if ( (notify != NULL) && (notify_2 != NULL) ) {
 		ret = -EBUSY;
 		goto out_unlock;
 	}
-	rcu_assign_pointer(net->ct.nf_conntrack_event_cb, new);
+	if (notify == NULL)
+		rcu_assign_pointer(net->ct.nf_conntrack_event_cb, new);
+	else
+		rcu_assign_pointer(net->ct.nf_conntrack_event_cb_2, new);
 	ret = 0;
 
 out_unlock:
@@ -107,12 +117,18 @@ void nf_conntrack_unregister_notifier(st
 				      struct nf_ct_event_notifier *new)
 {
 	struct nf_ct_event_notifier *notify;
+	struct nf_ct_event_notifier *notify_2;
 
 	mutex_lock(&nf_ct_ecache_mutex);
 	notify = rcu_dereference_protected(net->ct.nf_conntrack_event_cb,
 					   lockdep_is_held(&nf_ct_ecache_mutex));
-	BUG_ON(notify != new);
-	RCU_INIT_POINTER(net->ct.nf_conntrack_event_cb, NULL);
+	notify_2 = rcu_dereference_protected(net->ct.nf_conntrack_event_cb_2,
+	lockdep_is_held(&nf_ct_ecache_mutex));
+	BUG_ON((notify != new) || (notify_2 != new));
+	if (notify == new)
+		RCU_INIT_POINTER(net->ct.nf_conntrack_event_cb, NULL);
+	else
+		RCU_INIT_POINTER(net->ct.nf_conntrack_event_cb_2, NULL);
 	mutex_unlock(&nf_ct_ecache_mutex);
 }
 EXPORT_SYMBOL_GPL(nf_conntrack_unregister_notifier);
